{"telemetry_id":"prnwzdpflar27lb8","slug":"configuring-firewall-and-acl-exercise-tutorial","agent":"os","tutorial_started_at":1729046258170,"steps":[{"slug":"00-welcome","position":0,"files":[{"path":"exercises/00-welcome/README.es.md","name":"README.es.md","hidden":true},{"path":"exercises/00-welcome/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false},{"slug":"01-configuring-basic-rules-for-SSH-HTTP-HTTPS","position":1,"files":[{"path":"exercises/01-configuring-basic-rules-for-SSH-HTTP-HTTPS/README.es.md","name":"README.es.md","hidden":true},{"path":"exercises/01-configuring-basic-rules-for-SSH-HTTP-HTTPS/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false,"opened_at":1729046475650,"completed_at":1729046476156},{"slug":"02-configuring-advanced-rules-with-iptables","position":2,"files":[{"path":"exercises/02-configuring-advanced-rules-with-iptables/README.es.md","name":"README.es.md","hidden":true},{"path":"exercises/02-configuring-advanced-rules-with-iptables/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false,"opened_at":1729046476156,"completed_at":1729046476742},{"slug":"03-validate-your-work","position":3,"files":[{"path":"exercises/03-validate-your-work/README.es.md","name":"README.es.md","hidden":true},{"path":"exercises/03-validate-your-work/README.md","name":"README.md","hidden":true},{"path":"exercises/03-validate-your-work/solution.hide.json","name":"solution.hide.json","hidden":true},{"path":"exercises/03-validate-your-work/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1729046480821,"ended_at":1729046483696,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIGhhdmUgcGFzc2VkG1szOW0=","stderr":"","exit_code":1},{"starting_at":1729047047992,"ended_at":1729047048830,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIGhhdmUgcGFzc2VkG1szOW0=","stderr":"","exit_code":1},{"starting_at":1729047137877,"ended_at":1729047138680,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIGhhdmUgcGFzc2VkG1szOW0=","stderr":"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","exit_code":1},{"starting_at":1729047143861,"ended_at":1729047144654,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIGhhdmUgcGFzc2VkG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbUlwdGFibGVzIHJ1bGVzIHByZXNlbmNlIOKAuiBzaG91bGQgaGF2ZSAtQSBJTlBVVCAtaiBEUk9QG1szOW0bWzIybQoKICAgIBtbMm1leHBlY3QoG1syMm0bWzMxbXJlY2VpdmVkG1szOW0bWzJtKS4bWzIybXRvSGF2ZVByb3BlcnR5G1sybSgbWzIybRtbMzJtcGF0aBtbMzltG1sybSwgG1syMm0bWzMybXZhbHVlG1szOW0bWzJtKRtbMjJtCgogICAgRXhwZWN0ZWQgcGF0aDogG1szMm0iLUEgSU5QVVQgLWogRFJPUCIbWzM5bQogICAgUmVjZWl2ZWQgcGF0aDogG1szMW1bXRtbMzltCgogICAgRXhwZWN0ZWQgdmFsdWU6IBtbMzJtInByZXNlbnQiG1szOW0KICAgIFJlY2VpdmVkIHZhbHVlOiAbWzMxbXsiKmZpbHRlciI6ICJwcmVzZW50IiwgIi1BIElOUFVUIC1qIERSTyI6ICJwcmVzZW50IiwgIi1BIElOUFVUIC1wIHRjcCAtLWRwb3J0IDIyIC1qIEFDQ0VQVCI6ICJwcmVzZW50IiwgIi1BIElOUFVUIC1wIHRjcCAtLWRwb3J0IDQ0MyAtaiBBQ0NFUFQiOiAicHJlc2VudCIsICItQSBJTlBVVCAtcCB0Y3AgLS1kcG9ydCA4MCAtaiBBQ0NFUFQiOiAicHJlc2VudCIsICItQSBJTlBVVCAtcCB0Y3AgLS1kcG9ydCA4MCAtbSBzdGF0ZSAtLXN0YXRlIE5FVyAtbSByZWNlbnQgLS1zZXQiOiAicHJlc2VudCIsICItQSBJTlBVVCAtcCB0Y3AgLS1zeW4gLW0gbGltaXQgLS1saW1pdCAxL3MgLS1saW1pdC1idXJzdCA1IC1qIEFDQ0VQVCI6ICJwcmVzZW50IiwgIi1QIElOUFVUIERST1AiOiAicHJlc2VudCIsICItUCBPVVRQVVQgQUNDRVBUIjogInByZXNlbnQiLCAiOkZPUldBUkQgQUNDRVBUIFswOjBdIjogInByZXNlbnQiLCAiOklOUFVUIERST1AgWzE0NTo3OTY5XSI6ICJwcmVzZW50IiwgIjpPVVRQVVQgQUNDRVBUIFs5NDQ6Njg0NDRdIjogInByZXNlbnQiLCAiQ09NTUlUIjogInByZXNlbnQifRtbMzltChtbMm0bWzIybQobWzJtICAgICAgNDAgfBtbMjJtChtbMm0gICAgICA0MSB8ICAgdGVzdCgnc2hvdWxkIGhhdmUgLUEgSU5QVVQgLWogRFJPUCcsICgpID0+IHsbWzIybQobWzJtICAgID4gNDIgfCAgICAgZXhwZWN0KHJ1bGVzKS50b0hhdmVQcm9wZXJ0eSgnLUEgSU5QVVQgLWogRFJPUCcsICdwcmVzZW50Jyk7G1syMm0KG1sybSAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgXhtbMjJtChtbMm0gICAgICA0MyB8ICAgfSk7G1syMm0KG1sybSAgICAgIDQ0IHwgfSk7G1syMm0KG1sybRtbMjJtChtbMm0gICAgICAbWzJtYXQgT2JqZWN0LnRvSGF2ZVByb3BlcnR5ICgbWzIybRtbMm0bWzBtG1szNm1leGVyY2lzZXMvMDMtdmFsaWRhdGUteW91ci13b3JrL3Rlc3QuanMbWzM5bRtbMG0bWzJtOjQyOjE5KRtbMjJtG1sybRtbMjJtCiwKCiAgIHVuZGVmaW5lZCAKCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMC4gG1szN21zaG91bGQgaGF2ZSAtUCBJTlBVVCBEUk9QG1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSAxLiAbWzM3bXNob3VsZCBoYXZlIC1QIE9VVFBVVCBBQ0NFUFQbWzM5bQogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDIuIBtbMzdtc2hvdWxkIGhhdmUgLUEgSU5QVVQgLXAgdGNwIC0tZHBvcnQgMjIgLWogQUNDRVBUG1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSAzLiAbWzM3bXNob3VsZCBoYXZlIC1BIElOUFVUIC1wIHRjcCAtLWRwb3J0IDgwIC1qIEFDQ0VQVBtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gNC4gG1szN21zaG91bGQgaGF2ZSAtQSBJTlBVVCAtcCB0Y3AgLS1kcG9ydCA0NDMgLWogQUNDRVBUG1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSA1LiAbWzM3bXNob3VsZCBoYXZlIC1BIElOUFVUIC1wIHRjcCAtLWRwb3J0IDgwIC1tIHN0YXRlIC0tc3RhdGUgTkVXIC1tIHJlY2VudCAtLXNldBtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gNi4gG1szN21zaG91bGQgaGF2ZSAtQSBJTlBVVCAtcCB0Y3AgLS1zeW4gLW0gbGltaXQgLS1saW1pdCAxL3MgLS1saW1pdC1idXJzdCA1IC1qIEFDQ0VQVBtbMzltCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDcuIBtbMzdtc2hvdWxkIGhhdmUgLUEgSU5QVVQgLWogRFJPUBtbMzltIAoK","exit_code":1},{"starting_at":1729047207773,"ended_at":1729047208519,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIGhhdmUgcGFzc2VkG1szOW0=","stderr":"","exit_code":0},{"starting_at":1729047211461,"ended_at":1729047212319,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIGhhdmUgcGFzc2VkG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1729046476742,"completed_at":1729047212319}],"workout_session":[{"started_at":1729046258170}],"user_id":12041,"last_interaction_at":1729047212319}